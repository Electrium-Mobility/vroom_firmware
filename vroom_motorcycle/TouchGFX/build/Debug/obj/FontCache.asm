; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33133.0 

	TITLE	C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\build\Debug\obj\FontCache.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__AD3AE747_concurrencysal@h DB 01H
__12F3DF7D_sal@h DB 01H
__0BAB254A_vadefs@h DB 01H
__86FB9B4E_vcruntime@h DB 01H
__6226DE53_xkeycheck@h DB 01H
__55399B41_yvals_core@h DB 01H
__1B0272D9_corecrt@h DB 01H
__61CC25A1_errno@h DB 01H
__46AA6AF9_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__5D1C51EF_cstring DB 01H
__4779F5E3_stdarg@h DB 01H
__19139D6C_assert@h DB 01H
__73A64B2C_stdint@h DB 01H
__BD62AED8_Config@hpp DB 01H
__261CB716_Types@hpp DB 01H
__EF1024FE_Unicode@hpp DB 01H
__5B302B78_Font@hpp DB 01H
__57B6D630_TextProvider@hpp DB 01H
__C6D59AE9_Bitmap@hpp DB 01H
__FCF7ABFB_Utils@hpp DB 01H
__75B19981_Texts@hpp DB 01H
__F50D4E57_TypedText@hpp DB 01H
__02D83D4B_FontManager@hpp DB 01H
__AB3B2BEA_ApplicationFontProvider@hpp DB 01H
__51A2E864_FontCache@hpp DB 01H
__EACD7244_ConstFont@hpp DB 01H
__D70182D5_GeneratedFont@hpp DB 01H
__9646F54E_CachedFont@hpp DB 01H
__10FD4E56_TypedTextDatabase@hpp DB 01H
__7862C298_FontCache@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?width@GlyphNode@touchgfx@@QBEFXZ		; touchgfx::GlyphNode::width
PUBLIC	?height@GlyphNode@touchgfx@@QBEFXZ		; touchgfx::GlyphNode::height
PUBLIC	??1Font@touchgfx@@UAE@XZ			; touchgfx::Font::~Font
PUBLIC	?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z	; touchgfx::Font::getGlyph
PUBLIC	?getFallbackChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFallbackChar
PUBLIC	?getEllipsisChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getEllipsisChar
PUBLIC	?getBaseline@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getBaseline
PUBLIC	?getHeight@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getHeight
PUBLIC	?getBitsPerPixel@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getBitsPerPixel
PUBLIC	?getByteAlignRow@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getByteAlignRow
PUBLIC	?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::Font::getKerning
PUBLIC	?getGSUBTable@Font@touchgfx@@UBEPBGXZ		; touchgfx::Font::getGSUBTable
PUBLIC	?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::Font::getContextualFormsTable
PUBLIC	??4Font@touchgfx@@QAEAAV01@ABV01@@Z		; touchgfx::Font::operator=
PUBLIC	??_GFont@touchgfx@@UAEPAXI@Z			; touchgfx::Font::`scalar deleting destructor'
PUBLIC	??1TypedText@touchgfx@@UAE@XZ			; touchgfx::TypedText::~TypedText
PUBLIC	?hasValidId@TypedText@touchgfx@@QBE_NXZ		; touchgfx::TypedText::hasValidId
PUBLIC	?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ	; touchgfx::TypedText::getFont
PUBLIC	?getFontId@TypedText@touchgfx@@QBEGXZ		; touchgfx::TypedText::getFontId
PUBLIC	?getTextDirection@TypedText@touchgfx@@QBEEXZ	; touchgfx::TypedText::getTextDirection
PUBLIC	??0TypedText@touchgfx@@QAE@ABV01@@Z		; touchgfx::TypedText::TypedText
PUBLIC	??_GTypedText@touchgfx@@UAEPAXI@Z		; touchgfx::TypedText::`scalar deleting destructor'
PUBLIC	??0FontCache@touchgfx@@QAE@XZ			; touchgfx::FontCache::FontCache
PUBLIC	?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z ; touchgfx::FontCache::setReader
PUBLIC	?clear@FontCache@touchgfx@@QAEX_N@Z		; touchgfx::FontCache::clear
PUBLIC	?setMemory@FontCache@touchgfx@@QAEXPAEI@Z	; touchgfx::FontCache::setMemory
PUBLIC	?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z ; touchgfx::FontCache::initializeCachedFont
PUBLIC	?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z ; touchgfx::FontCache::cacheString
PUBLIC	?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z ; touchgfx::FontCache::cacheLigatures
PUBLIC	?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z ; touchgfx::FontCache::getGlyph
PUBLIC	?open@FontCache@touchgfx@@QAEXXZ		; touchgfx::FontCache::open
PUBLIC	?close@FontCache@touchgfx@@QAEXXZ		; touchgfx::FontCache::close
PUBLIC	?contains@FontCache@touchgfx@@ABE_NGG@Z		; touchgfx::FontCache::contains
PUBLIC	?insert@FontCache@touchgfx@@AAEXGGAA_N@Z	; touchgfx::FontCache::insert
PUBLIC	?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGAA_N@Z ; touchgfx::FontCache::copyGlyph
PUBLIC	?cacheData@FontCache@touchgfx@@AAEXPAUGlyphNode@2@@Z ; touchgfx::FontCache::cacheData
PUBLIC	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
PUBLIC	?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ; touchgfx::FontCache::createSortedString
PUBLIC	?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ; touchgfx::FontCache::createSortedLigatures
PUBLIC	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z	; touchgfx::FontCache::sortSortedString
PUBLIC	?setPosition@FontCache@touchgfx@@AAEXI@Z	; touchgfx::FontCache::setPosition
PUBLIC	?readData@FontCache@touchgfx@@AAEXPAXI@Z	; touchgfx::FontCache::readData
PUBLIC	?getGlyphSize@FontCache@touchgfx@@AAEIPBUGlyphNode@2@@Z ; touchgfx::FontCache::getGlyphSize
PUBLIC	??1ConstFont@touchgfx@@UAE@XZ			; touchgfx::ConstFont::~ConstFont
PUBLIC	??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::ConstFont::operator=
PUBLIC	??1GeneratedFont@touchgfx@@UAE@XZ		; touchgfx::GeneratedFont::~GeneratedFont
PUBLIC	??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::GeneratedFont::operator=
PUBLIC	??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ; touchgfx::CachedFont::CachedFont
PUBLIC	?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ	; touchgfx::CachedFont::getGSUBTable
PUBLIC	?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z	; touchgfx::CachedFont::setGSUBTable
PUBLIC	?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::CachedFont::getContextualFormsTable
PUBLIC	?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z ; touchgfx::CachedFont::setContextualFormsTable
PUBLIC	??1CachedFont@touchgfx@@UAE@XZ			; touchgfx::CachedFont::~CachedFont
PUBLIC	??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::CachedFont::operator=
PUBLIC	??_GCachedFont@touchgfx@@UAEPAXI@Z		; touchgfx::CachedFont::`scalar deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	??_7Font@touchgfx@@6B@				; touchgfx::Font::`vftable'
PUBLIC	??_7TypedText@touchgfx@@6B@			; touchgfx::TypedText::`vftable'
PUBLIC	??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@ ; `string'
PUBLIC	??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@ ; `string'
PUBLIC	??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@ ; `string'
PUBLIC	??_C@_1HM@LHAECKML@?$AAh?$AAa?$AAs?$AAV?$AAa?$AAl?$AAi?$AAd?$AAI?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@ ; `string'
PUBLIC	??_7CachedFont@touchgfx@@6B@			; touchgfx::CachedFont::`vftable'
PUBLIC	??_R4Font@touchgfx@@6B@				; touchgfx::Font::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFont@touchgfx@@@8			; touchgfx::Font `RTTI Type Descriptor'
PUBLIC	??_R3Font@touchgfx@@8				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Font@touchgfx@@8				; touchgfx::Font::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Font@touchgfx@@8			; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4TypedText@touchgfx@@6B@			; touchgfx::TypedText::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTypedText@touchgfx@@@8			; touchgfx::TypedText `RTTI Type Descriptor'
PUBLIC	??_R3TypedText@touchgfx@@8			; touchgfx::TypedText::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TypedText@touchgfx@@8			; touchgfx::TypedText::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TypedText@touchgfx@@8		; touchgfx::TypedText::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CachedFont@touchgfx@@6B@			; touchgfx::CachedFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCachedFont@touchgfx@@@8			; touchgfx::CachedFont `RTTI Type Descriptor'
PUBLIC	??_R3CachedFont@touchgfx@@8			; touchgfx::CachedFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CachedFont@touchgfx@@8			; touchgfx::CachedFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CachedFont@touchgfx@@8		; touchgfx::CachedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@GeneratedFont@touchgfx@@8		; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGeneratedFont@touchgfx@@@8		; touchgfx::GeneratedFont `RTTI Type Descriptor'
PUBLIC	??_R3GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ConstFont@touchgfx@@8		; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVConstFont@touchgfx@@@8			; touchgfx::ConstFont `RTTI Type Descriptor'
PUBLIC	??_R3ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Base Class Array'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp___wassert:PROC
EXTRN	?strlen@Unicode@touchgfx@@SAGPBG@Z:PROC		; touchgfx::Unicode::strlen
EXTRN	?getStringWidth@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getStringWidth@Font@touchgfx@@UBAGEPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getCharWidth@Font@touchgfx@@UBEGG@Z:PROC	; touchgfx::Font::getCharWidth
EXTRN	?getSpacingAbove@Font@touchgfx@@UBAFPBGZZ:PROC	; touchgfx::Font::getSpacingAbove
EXTRN	?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getMaxTextHeight
EXTRN	?getFontHeight@Font@touchgfx@@UBEGXZ:PROC	; touchgfx::Font::getFontHeight
EXTRN	?getMinimumTextHeight@Font@touchgfx@@UBEGXZ:PROC ; touchgfx::Font::getMinimumTextHeight
EXTRN	?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getNumberOfLines
EXTRN	??_EFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::Font::`vector deleting destructor'
EXTRN	??0TextProvider@touchgfx@@QAE@XZ:PROC		; touchgfx::TextProvider::TextProvider
EXTRN	?initialize@TextProvider@touchgfx@@QAEXPBGPAD0PBUFontContextualFormsTable@2@@Z:PROC ; touchgfx::TextProvider::initialize
EXTRN	?getNextLigature@TextProvider@touchgfx@@QAEGE@Z:PROC ; touchgfx::TextProvider::getNextLigature
EXTRN	?memset@touchgfx@@YAXPAXEI@Z:PROC		; touchgfx::memset
EXTRN	??_ETypedText@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::TypedText::`vector deleting destructor'
EXTRN	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z:PROC ; touchgfx::GeneratedFont::GeneratedFont
EXTRN	?getGlyph@CachedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z:PROC ; touchgfx::CachedFont::getGlyph
EXTRN	?getPixelData@CachedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z:PROC ; touchgfx::CachedFont::getPixelData
EXTRN	?getKerning@CachedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z:PROC ; touchgfx::CachedFont::getKerning
EXTRN	??_ECachedFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::CachedFont::`vector deleting destructor'
EXTRN	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ:PROC ; TypedTextDatabase::getFonts
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B:DWORD ; touchgfx::TypedText::typedTexts
EXTRN	?fonts@TypedText@touchgfx@@0PBQBVFont@2@B:DWORD	; touchgfx::TypedText::fonts
EXTRN	?numberOfTypedTexts@TypedText@touchgfx@@0GA:WORD ; touchgfx::TypedText::numberOfTypedTexts
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R2ConstFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8 ; touchgfx::ConstFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R3ConstFont@touchgfx@@8 DD 00H			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVConstFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVConstFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::ConstFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVConstFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ConstFont@touchgfx@@8 DD FLAT:??_R0?AVConstFont@touchgfx@@@8 ; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R2GeneratedFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R3GeneratedFont@touchgfx@@8 DD 00H			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGeneratedFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVGeneratedFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::GeneratedFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGeneratedFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 DD FLAT:??_R0?AVGeneratedFont@touchgfx@@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CachedFont@touchgfx@@8 DD FLAT:??_R0?AVCachedFont@touchgfx@@@8 ; touchgfx::CachedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R2CachedFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@CachedFont@touchgfx@@8 ; touchgfx::CachedFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GeneratedFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R3CachedFont@touchgfx@@8 DD 00H			; touchgfx::CachedFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCachedFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVCachedFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::CachedFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCachedFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CachedFont@touchgfx@@6B@
rdata$r	SEGMENT
??_R4CachedFont@touchgfx@@6B@ DD 00H			; touchgfx::CachedFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCachedFont@touchgfx@@@8
	DD	FLAT:??_R3CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TypedText@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TypedText@touchgfx@@8 DD FLAT:??_R0?AVTypedText@touchgfx@@@8 ; touchgfx::TypedText::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TypedText@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2TypedText@touchgfx@@8
rdata$r	SEGMENT
??_R2TypedText@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@TypedText@touchgfx@@8 ; touchgfx::TypedText::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TypedText@touchgfx@@8
rdata$r	SEGMENT
??_R3TypedText@touchgfx@@8 DD 00H			; touchgfx::TypedText::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TypedText@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTypedText@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVTypedText@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::TypedText `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTypedText@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4TypedText@touchgfx@@6B@
rdata$r	SEGMENT
??_R4TypedText@touchgfx@@6B@ DD 00H			; touchgfx::TypedText::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTypedText@touchgfx@@@8
	DD	FLAT:??_R3TypedText@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Font@touchgfx@@8 DD FLAT:??_R0?AVFont@touchgfx@@@8 ; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2Font@touchgfx@@8
rdata$r	SEGMENT
??_R2Font@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@Font@touchgfx@@8 ; touchgfx::Font::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Font@touchgfx@@8
rdata$r	SEGMENT
??_R3Font@touchgfx@@8 DD 00H				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@	; touchgfx::Font `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Font@touchgfx@@6B@
rdata$r	SEGMENT
??_R4Font@touchgfx@@6B@ DD 00H				; touchgfx::Font::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFont@touchgfx@@@8
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_7CachedFont@touchgfx@@6B@
CONST	SEGMENT
??_7CachedFont@touchgfx@@6B@ DD FLAT:??_R4CachedFont@touchgfx@@6B@ ; touchgfx::CachedFont::`vftable'
	DD	FLAT:??_ECachedFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:?getGlyph@CachedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAFPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBaseline@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@CachedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
	DD	FLAT:?getPixelData@CachedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z
	DD	FLAT:?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z
	DD	FLAT:?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z
CONST	ENDS
;	COMDAT ??_C@_1HM@LHAECKML@?$AAh?$AAa?$AAs?$AAV?$AAa?$AAl?$AAi?$AAd?$AAI?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
CONST	SEGMENT
??_C@_1HM@LHAECKML@?$AAh?$AAa?$AAs?$AAV?$AAa?$AAl?$AAi?$AAd?$AAI?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@ DB 'h'
	DB	00H, 'a', 00H, 's', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, 'I', 00H, 'd', 00H, '(', 00H, ')', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, '"', 00H, 't', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'I'
	DB	00H, 'd', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'e', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'a', 00H, 'n'
	DB	00H, ' ', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H
	DB	'r', 00H, 'O', 00H, 'f', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e'
	DB	00H, 'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 's', 00H
	DB	'.', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
CONST	SEGMENT
??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@ DB 'typedTextId la'
	DB	'rger than numberOfTypedTexts.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e'
	DB	00H, 'x', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'h'
	DB	00H, 'a', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'b', 00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, '.', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@
CONST	SEGMENT
??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'S', 00H, 'T', 00H, 'M', 00H, '3', 00H
	DB	'2', 00H, 'C', 00H, 'u', 00H, 'b', 00H, 'e', 00H, 'I', 00H, 'D'
	DB	00H, 'E', 00H, '\', 00H, 'E', 00H, 'l', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'v'
	DB	00H, 'r', 00H, 'o', 00H, 'o', 00H, 'm', 00H, '_', 00H, 'm', 00H
	DB	'o', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'y', 00H, 'c'
	DB	00H, 'l', 00H, 'e', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'd', 00H
	DB	'd', 00H, 'l', 00H, 'e', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, '\', 00H, 'S', 00H, 'T', 00H, '\', 00H, 't', 00H
	DB	'o', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'g', 00H, 'f', 00H, 'x'
	DB	00H, '\', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'w', 00H, 'o', 00H, 'r', 00H, 'k', 00H, '\', 00H, 'i', 00H, 'n'
	DB	00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H
	DB	't', 00H, 'o', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'g', 00H, 'f'
	DB	00H, 'x', 00H, '\', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, '.', 00H, 'h'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
CONST	SEGMENT
??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@ DB 'TypedText dat'
	DB	'abase has not been initialized.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7TypedText@touchgfx@@6B@
CONST	SEGMENT
??_7TypedText@touchgfx@@6B@ DD FLAT:??_R4TypedText@touchgfx@@6B@ ; touchgfx::TypedText::`vftable'
	DD	FLAT:??_ETypedText@touchgfx@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7Font@touchgfx@@6B@
CONST	SEGMENT
??_7Font@touchgfx@@6B@ DD FLAT:??_R4Font@touchgfx@@6B@	; touchgfx::Font::`vftable'
	DD	FLAT:??_EFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:__purecall
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAFPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBaseline@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@Font@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
	DB	023H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	033H
	DW	01f8H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ$0
__ehfuncinfo$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z$0
__ehfuncinfo$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z$0
__ehfuncinfo$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z$0
__ehfuncinfo$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z$0
__ehfuncinfo$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCachedFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCachedFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::CachedFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CachedFont@touchgfx@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	56					; 00000038H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCachedFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::CachedFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC	; touchgfx::CachedFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+44]
	mov	WORD PTR [eax+44], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax+52], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP	; touchgfx::CachedFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CachedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CachedFont@touchgfx@@UAE@XZ PROC			; touchgfx::CachedFont::~CachedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GeneratedFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CachedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::CachedFont::~CachedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_table$ = 8						; size = 4
?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z PROC ; touchgfx::CachedFont::setContextualFormsTable, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9646F54E_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z ENDP ; touchgfx::CachedFont::setContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::CachedFont::getContextualFormsTable, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9646F54E_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN2@getContext
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	jmp	SHORT $LN1@getContext
$LN2@getContext:
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+52]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@getContext:
; Line 79
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::CachedFont::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_table$ = 8						; size = 4
?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z PROC	; touchgfx::CachedFont::setGSUBTable, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9646F54E_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 70
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z ENDP	; touchgfx::CachedFont::setGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ PROC	; touchgfx::CachedFont::getGSUBTable, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9646F54E_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@getGSUBTab
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	jmp	SHORT $LN1@getGSUBTab
$LN2@getGSUBTab:
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+52]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@getGSUBTab:
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ ENDP	; touchgfx::CachedFont::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_data$ = 8						; size = 4
_id$ = 12						; size = 2
__cache$ = 16						; size = 4
__flashFont$ = 20					; size = 4
??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z PROC ; touchgfx::CachedFont::CachedFont, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9646F54E_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 16
	push	0
	push	0
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax+42]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, WORD PTR [edx+40]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+39]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+38]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+37]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+35]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+34]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, WORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax+30]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, WORD PTR [edx+28]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z ; touchgfx::GeneratedFont::GeneratedFont
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CachedFont@touchgfx@@6B@
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _id$[ebp]
	mov	WORD PTR [eax+44], cx
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __cache$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __flashFont$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ENDP ; touchgfx::CachedFont::CachedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC	; touchgfx::GeneratedFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP	; touchgfx::GeneratedFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GeneratedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GeneratedFont@touchgfx@@UAE@XZ PROC			; touchgfx::GeneratedFont::~GeneratedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ConstFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GeneratedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::GeneratedFont::~GeneratedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC		; touchgfx::ConstFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Font@touchgfx@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+24]
	mov	WORD PTR [eax+24], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP		; touchgfx::ConstFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ConstFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ConstFont@touchgfx@@UAE@XZ PROC			; touchgfx::ConstFont::~ConstFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ConstFont@touchgfx@@UAE@XZ ENDP			; touchgfx::ConstFont::~ConstFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyphSize@FontCache@touchgfx@@AAEIPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_gn$ = 8						; size = 4
?getGlyphSize@FontCache@touchgfx@@AAEIPBUGlyphNode@2@@Z PROC ; touchgfx::FontCache::getGlyphSize, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\include\fonts\FontCache.hpp
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __51A2E864_FontCache@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+121]
	test	ecx, ecx
	je	SHORT $LN2@getGlyphSi
; Line 80
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?width@GlyphNode@touchgfx@@QBEFXZ	; touchgfx::GlyphNode::width
	cwde
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+120]
	imul	eax, edx
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	mov	esi, eax
	sar	esi, 3
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?height@GlyphNode@touchgfx@@QBEFXZ	; touchgfx::GlyphNode::height
	cwde
	imul	eax, esi
	jmp	SHORT $LN1@getGlyphSi
$LN2@getGlyphSi:
; Line 83
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?width@GlyphNode@touchgfx@@QBEFXZ	; touchgfx::GlyphNode::width
	movsx	esi, ax
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?height@GlyphNode@touchgfx@@QBEFXZ	; touchgfx::GlyphNode::height
	cwde
	imul	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+120]
	imul	esi, edx
	add	esi, 7
	mov	eax, esi
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
$LN1@getGlyphSi:
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getGlyphSize@FontCache@touchgfx@@AAEIPBUGlyphNode@2@@Z ENDP ; touchgfx::FontCache::getGlyphSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readData@FontCache@touchgfx@@AAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_out$ = 8						; size = 4
_numberOfBytes$ = 12					; size = 4
?readData@FontCache@touchgfx@@AAEXPAXI@Z PROC		; touchgfx::FontCache::readData, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 419
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@readData
; Line 421
	mov	esi, esp
	mov	eax, DWORD PTR _numberOfBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@readData:
; Line 423
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?readData@FontCache@touchgfx@@AAEXPAXI@Z ENDP		; touchgfx::FontCache::readData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPosition@FontCache@touchgfx@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?setPosition@FontCache@touchgfx@@AAEXI@Z PROC		; touchgfx::FontCache::setPosition, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 411
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@setPositio
; Line 413
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setPositio:
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPosition@FontCache@touchgfx@@AAEXI@Z ENDP		; touchgfx::FontCache::setPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortSortedString@FontCache@touchgfx@@AAE_NH@Z
_TEXT	SEGMENT
_temp$1 = -68						; size = 2
_j$2 = -56						; size = 4
_swapped$3 = -41					; size = 1
_i$4 = -32						; size = 4
_uc$ = -20						; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?sortSortedString@FontCache@touchgfx@@AAE_NH@Z PROC	; touchgfx::FontCache::sortSortedString, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 385
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _uc$[ebp], ecx
; Line 386
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@sortSorted
$LN2@sortSorted:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@sortSorted:
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$4[ebp], eax
	jge	$LN3@sortSorted
; Line 388
	mov	BYTE PTR _swapped$3[ebp], 0
; Line 389
	mov	DWORD PTR _j$2[ebp], 0
	jmp	SHORT $LN7@sortSorted
$LN5@sortSorted:
	mov	eax, DWORD PTR _j$2[ebp]
	add	eax, 1
	mov	DWORD PTR _j$2[ebp], eax
$LN7@sortSorted:
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, DWORD PTR _i$4[ebp]
	sub	eax, 1
	cmp	DWORD PTR _j$2[ebp], eax
	jge	SHORT $LN6@sortSorted
; Line 391
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	movzx	eax, WORD PTR [ecx+eax*2+2]
	cmp	edx, eax
	jle	SHORT $LN8@sortSorted
; Line 393
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _temp$1[ebp], dx
; Line 394
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	edx, DWORD PTR _j$2[ebp]
	mov	esi, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR [esi+edx*2+2]
	mov	WORD PTR [ecx+eax*2], dx
; Line 395
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR _temp$1[ebp]
	mov	WORD PTR [ecx+eax*2+2], dx
; Line 396
	mov	BYTE PTR _swapped$3[ebp], 1
$LN8@sortSorted:
; Line 398
	jmp	SHORT $LN5@sortSorted
$LN6@sortSorted:
; Line 401
	movzx	eax, BYTE PTR _swapped$3[ebp]
	test	eax, eax
	jne	SHORT $LN9@sortSorted
; Line 403
	jmp	SHORT $LN3@sortSorted
$LN9@sortSorted:
; Line 405
	jmp	$LN2@sortSorted
$LN3@sortSorted:
; Line 406
	mov	al, 1
; Line 407
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ENDP	; touchgfx::FontCache::sortSortedString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
_TEXT	SEGMENT
tv142 = -404						; size = 4
tv128 = -404						; size = 4
$T2 = -393						; size = 1
$T3 = -381						; size = 1
$T4 = -369						; size = 1
_n$ = -156						; size = 4
_ligature$ = -144					; size = 2
_tp$ = -132						; size = 100
_pArg$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_font$ = 12						; size = 4
_t$ = 16						; size = 8
_string$ = 24						; size = 4
?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ PROC ; touchgfx::FontCache::createSortedLigatures, COMDAT
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 357
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 392				; 00000188H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 356
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 359
	lea	eax, DWORD PTR _string$[ebp+4]
	mov	DWORD PTR _pArg$[ebp], eax
; Line 360
	lea	ecx, DWORD PTR _tp$[ebp]
	call	??0TextProvider@touchgfx@@QAE@XZ	; touchgfx::TextProvider::TextProvider
; Line 361
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pArg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _string$[ebp]
	push	edx
	lea	ecx, DWORD PTR _tp$[ebp]
	call	?initialize@TextProvider@touchgfx@@QAEXPBGPAD0PBUFontContextualFormsTable@2@@Z ; touchgfx::TextProvider::initialize
; Line 362
	mov	DWORD PTR _pArg$[ebp], 0
; Line 364
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+44], edx
; Line 365
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+32]
	jae	SHORT $LN4@createSort
; Line 367
	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN1@createSort
$LN4@createSort:
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	DWORD PTR tv128[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx+44], eax
	xor	ecx, ecx
	mov	edx, DWORD PTR tv128[ebp]
	mov	WORD PTR [edx], cx
; Line 370
	mov	DWORD PTR _n$[ebp], 0
$LN2@createSort:
; Line 371
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getTextDirection@TypedText@touchgfx@@QBEEXZ ; touchgfx::TypedText::getTextDirection
	movzx	eax, al
	push	eax
	lea	ecx, DWORD PTR _tp$[ebp]
	call	?getNextLigature@TextProvider@touchgfx@@QAEGE@Z ; touchgfx::TextProvider::getNextLigature
	mov	WORD PTR _ligature$[ebp], ax
	movzx	ecx, WORD PTR _ligature$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@createSort
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+32]
	jae	SHORT $LN5@createSort
; Line 375
	mov	BYTE PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN1@createSort
$LN5@createSort:
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	DWORD PTR tv142[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	mov	DWORD PTR [edx+44], eax
	mov	ecx, DWORD PTR tv142[ebp]
	mov	dx, WORD PTR _ligature$[ebp]
	mov	WORD PTR [ecx], dx
; Line 378
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 379
	jmp	$LN2@createSort
$LN3@createSort:
; Line 380
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ; touchgfx::FontCache::sortSortedString
	mov	BYTE PTR $T2[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T2[ebp]
$LN1@createSort:
; Line 381
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@createSort
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 404				; 00000194H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@createSort:
	DD	1
	DD	$LN10@createSort
$LN10@createSort:
	DD	-132					; ffffff7cH
	DD	100					; 00000064H
	DD	$LN8@createSort
$LN8@createSort:
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-408]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ENDP ; touchgfx::FontCache::createSortedLigatures
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z
_TEXT	SEGMENT
_uc$ = -44						; size = 4
_n$ = -32						; size = 4
_length$ = -20						; size = 4
_this$ = -8						; size = 4
_string$ = 8						; size = 4
?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z PROC	; touchgfx::FontCache::createSortedString, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 337
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	?strlen@Unicode@touchgfx@@SAGPBG@Z	; touchgfx::Unicode::strlen
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _length$[ebp], ecx
; Line 339
	mov	eax, DWORD PTR _length$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	sub	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 340
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	cmp	edx, DWORD PTR [ecx+32]
	jae	SHORT $LN4@createSort
; Line 343
	xor	al, al
	jmp	SHORT $LN1@createSort
$LN4@createSort:
; Line 345
	mov	DWORD PTR _n$[ebp], 0
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _uc$[ebp], ecx
$LN2@createSort:
; Line 347
	mov	eax, DWORD PTR _string$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@createSort
; Line 349
	mov	eax, DWORD PTR _uc$[ebp]
	mov	ecx, DWORD PTR _string$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _uc$[ebp]
	add	eax, 2
	mov	DWORD PTR _uc$[ebp], eax
	mov	ecx, DWORD PTR _string$[ebp]
	add	ecx, 2
	mov	DWORD PTR _string$[ebp], ecx
; Line 350
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 351
	jmp	SHORT $LN2@createSort
$LN3@createSort:
; Line 352
	xor	eax, eax
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	WORD PTR [ecx], ax
; Line 353
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ; touchgfx::FontCache::sortSortedString
$LN1@createSort:
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ENDP	; touchgfx::FontCache::createSortedString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
_TEXT	SEGMENT
tv171 = -328						; size = 4
tv133 = -328						; size = 4
tv93 = -328						; size = 4
$T2 = -317						; size = 1
_ch$3 = -116						; size = 2
_outOfMemory$ = -101					; size = 1
_firstNewGlyph$ = -92					; size = 4
_last$ = -80						; size = 2
_string$ = -68						; size = 4
_fontId$ = -56						; size = 2
_dummy$ = -44						; size = 4
_glyphNodeOffset$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 8
?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z PROC ; touchgfx::FontCache::cacheSortedString, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 183
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 187
	push	4
	lea	eax, DWORD PTR _glyphNodeOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 188
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 189
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 190
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 191
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 192
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 194
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFontId@TypedText@touchgfx@@QBEGXZ	; touchgfx::TypedText::getFontId
	mov	WORD PTR _fontId$[ebp], ax
; Line 195
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ ; touchgfx::TypedText::getFont
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+120], al
; Line 196
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ ; touchgfx::TypedText::getFont
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv133[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+121], al
; Line 198
	mov	eax, DWORD PTR _glyphNodeOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 199
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+118], ax
; Line 200
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+126], ax
; Line 202
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _string$[ebp], ecx
; Line 203
	xor	eax, eax
	mov	WORD PTR _last$[ebp], ax
; Line 204
	mov	DWORD PTR _firstNewGlyph$[ebp], 0
; Line 205
	mov	BYTE PTR _outOfMemory$[ebp], 0
$LN2@cacheSorte:
; Line 206
	mov	eax, DWORD PTR _string$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@cacheSorte
; Line 208
	mov	eax, DWORD PTR _string$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _ch$3[ebp], cx
; Line 209
	movzx	eax, WORD PTR _ch$3[ebp]
	movzx	ecx, WORD PTR _last$[ebp]
	cmp	eax, ecx
	je	SHORT $LN4@cacheSorte
; Line 211
	movzx	eax, WORD PTR _fontId$[ebp]
	push	eax
	movzx	ecx, WORD PTR _ch$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?contains@FontCache@touchgfx@@ABE_NGG@Z	; touchgfx::FontCache::contains
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@cacheSorte
; Line 213
	lea	eax, DWORD PTR _outOfMemory$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fontId$[ebp]
	push	ecx
	movzx	edx, WORD PTR _ch$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@FontCache@touchgfx@@AAEXGGAA_N@Z ; touchgfx::FontCache::insert
; Line 214
	movzx	eax, BYTE PTR _outOfMemory$[ebp]
	test	eax, eax
	je	SHORT $LN6@cacheSorte
; Line 216
	jmp	SHORT $LN3@cacheSorte
$LN6@cacheSorte:
; Line 218
	cmp	DWORD PTR _firstNewGlyph$[ebp], 0
	jne	SHORT $LN4@cacheSorte
; Line 220
	movzx	eax, WORD PTR _fontId$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR _firstNewGlyph$[ebp], edx
$LN4@cacheSorte:
; Line 224
	mov	ax, WORD PTR _ch$3[ebp]
	mov	WORD PTR _last$[ebp], ax
; Line 225
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 2
	mov	DWORD PTR _string$[ebp], eax
; Line 226
	jmp	SHORT $LN2@cacheSorte
$LN3@cacheSorte:
; Line 228
	mov	eax, DWORD PTR _firstNewGlyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheData@FontCache@touchgfx@@AAEXPAUGlyphNode@2@@Z ; touchgfx::FontCache::cacheData
; Line 229
	movzx	eax, BYTE PTR _outOfMemory$[ebp]
	test	eax, eax
	jne	SHORT $LN9@cacheSorte
	mov	DWORD PTR tv171[ebp], 1
	jmp	SHORT $LN10@cacheSorte
$LN9@cacheSorte:
	mov	DWORD PTR tv171[ebp], 0
$LN10@cacheSorte:
	mov	cl, BYTE PTR tv171[ebp]
	mov	BYTE PTR $T2[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	movzx	eax, BYTE PTR $T2[ebp]
; Line 230
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@cacheSorte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN17@cacheSorte:
	DD	3
	DD	$LN16@cacheSorte
$LN16@cacheSorte:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN12@cacheSorte
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN13@cacheSorte
	DD	-101					; ffffff9bH
	DD	1
	DD	$LN14@cacheSorte
$LN14@cacheSorte:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
$LN13@cacheSorte:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN12@cacheSorte:
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-332]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ENDP ; touchgfx::FontCache::cacheSortedString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheData@FontCache@touchgfx@@AAEXPAUGlyphNode@2@@Z
_TEXT	SEGMENT
_next$1 = -44						; size = 4
_p$2 = -32						; size = 4
_gn$ = -20						; size = 4
_this$ = -8						; size = 4
_first$ = 8						; size = 4
?cacheData@FontCache@touchgfx@@AAEXPAUGlyphNode@2@@Z PROC ; touchgfx::FontCache::cacheData, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 312
	mov	eax, DWORD PTR _first$[ebp]
	mov	DWORD PTR _gn$[ebp], eax
$LN2@cacheData:
; Line 313
	cmp	DWORD PTR _gn$[ebp], 0
	je	SHORT $LN1@cacheData
; Line 315
	mov	eax, DWORD PTR _gn$[ebp]
	mov	DWORD PTR _p$2[ebp], eax
; Line 316
	mov	eax, DWORD PTR _gn$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN4@cacheData
; Line 318
	mov	eax, DWORD PTR _p$2[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _p$2[ebp], eax
; Line 320
	mov	eax, DWORD PTR _p$2[ebp]
	add	eax, 4
	mov	DWORD PTR _p$2[ebp], eax
; Line 323
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _gn$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 324
	mov	eax, DWORD PTR _gn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getGlyphSize@FontCache@touchgfx@@AAEIPBUGlyphNode@2@@Z ; touchgfx::FontCache::getGlyphSize
	push	eax
	mov	ecx, DWORD PTR _p$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 327
	mov	eax, DWORD PTR _gn$[ebp]
	mov	DWORD PTR [eax], -1
$LN4@cacheData:
; Line 330
	mov	eax, DWORD PTR _gn$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 331
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _gn$[ebp], ecx
; Line 332
	jmp	SHORT $LN2@cacheData
$LN1@cacheData:
; Line 333
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?cacheData@FontCache@touchgfx@@AAEXPAUGlyphNode@2@@Z ENDP ; touchgfx::FontCache::cacheData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGAA_N@Z
_TEXT	SEGMENT
_next$ = -56						; size = 4
_requiredMem$ = -44					; size = 4
_alignment$ = -32					; size = 4
_glyphSize$ = -20					; size = 4
_this$ = -8						; size = 4
_top$ = 8						; size = 4
_unicode$ = 12						; size = 2
_font$ = 16						; size = 2
_outOfMemory$ = 20					; size = 4
?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGAA_N@Z PROC	; touchgfx::FontCache::copyGlyph, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
$LN2@copyGlyph:
; Line 277
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+118]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+116]
	cmp	ecx, eax
	jge	SHORT $LN3@copyGlyph
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+126]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jge	SHORT $LN3@copyGlyph
; Line 279
	push	14					; 0000000eH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 122				; 0000007aH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 280
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+118]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+118], cx
; Line 281
	jmp	SHORT $LN2@copyGlyph
$LN3@copyGlyph:
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+126]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	je	SHORT $LN4@copyGlyph
; Line 285
	mov	eax, DWORD PTR _top$[ebp]
	jmp	$LN1@copyGlyph
$LN4@copyGlyph:
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 122				; 0000007aH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getGlyphSize@FontCache@touchgfx@@AAEIPBUGlyphNode@2@@Z ; touchgfx::FontCache::getGlyphSize
	mov	DWORD PTR _glyphSize$[ebp], eax
; Line 290
	mov	DWORD PTR _alignment$[ebp], 4
; Line 291
	mov	eax, DWORD PTR _glyphSize$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	mov	DWORD PTR _glyphSize$[ebp], eax
; Line 292
	mov	eax, DWORD PTR _glyphSize$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _requiredMem$[ebp], eax
; Line 295
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, DWORD PTR _requiredMem$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+44]
	jbe	SHORT $LN5@copyGlyph
; Line 297
	mov	eax, DWORD PTR _outOfMemory$[ebp]
	mov	BYTE PTR [eax], 1
; Line 298
	mov	eax, DWORD PTR _top$[ebp]
	jmp	SHORT $LN1@copyGlyph
$LN5@copyGlyph:
; Line 301
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 122				; 0000007aH
	mov	ecx, DWORD PTR _top$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	ax, WORD PTR [eax+12]
	mov	WORD PTR [ecx+12], ax
; Line 304
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$[ebp], eax
; Line 305
	mov	eax, DWORD PTR _next$[ebp]
	mov	DWORD PTR [eax], 0
; Line 306
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, DWORD PTR _requiredMem$[ebp]
	mov	DWORD PTR _top$[ebp], eax
; Line 307
	mov	eax, DWORD PTR _top$[ebp]
$LN1@copyGlyph:
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGAA_N@Z ENDP	; touchgfx::FontCache::copyGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@FontCache@touchgfx@@AAEXGGAA_N@Z
_TEXT	SEGMENT
_old_next$1 = -32					; size = 4
_oldTop$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
_outOfMemory$ = 16					; size = 4
?insert@FontCache@touchgfx@@AAEXGGAA_N@Z PROC		; touchgfx::FontCache::insert, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 250
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _oldTop$[ebp], ecx
; Line 251
	mov	eax, DWORD PTR _outOfMemory$[ebp]
	push	eax
	movzx	ecx, WORD PTR _font$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGAA_N@Z ; touchgfx::FontCache::copyGlyph
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _oldTop$[ebp]
	jne	SHORT $LN2@insert
; Line 255
	jmp	SHORT $LN1@insert
$LN2@insert:
; Line 258
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*8+4], 0
	jne	SHORT $LN3@insert
; Line 261
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8], edx
; Line 262
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
; Line 263
	jmp	SHORT $LN1@insert
$LN3@insert:
; Line 267
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _old_next$1[ebp], edx
; Line 268
	mov	eax, DWORD PTR _old_next$1[ebp]
	mov	ecx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 271
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
$LN1@insert:
; Line 273
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@FontCache@touchgfx@@AAEXGGAA_N@Z ENDP		; touchgfx::FontCache::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@FontCache@touchgfx@@ABE_NGG@Z
_TEXT	SEGMENT
_next$1 = -32						; size = 4
_g$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
?contains@FontCache@touchgfx@@ABE_NGG@Z PROC		; touchgfx::FontCache::contains, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 234
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _g$[ebp], edx
$LN2@contains:
; Line 235
	cmp	DWORD PTR _g$[ebp], 0
	je	SHORT $LN3@contains
; Line 237
	mov	eax, DWORD PTR _g$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN4@contains
; Line 239
	mov	al, 1
	jmp	SHORT $LN1@contains
$LN4@contains:
; Line 241
	mov	eax, DWORD PTR _g$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 242
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _g$[ebp], ecx
; Line 243
	jmp	SHORT $LN2@contains
$LN3@contains:
; Line 244
	xor	al, al
$LN1@contains:
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?contains@FontCache@touchgfx@@ABE_NGG@Z ENDP		; touchgfx::FontCache::contains
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@FontCache@touchgfx@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?close@FontCache@touchgfx@@QAEXXZ PROC			; touchgfx::FontCache::close, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@close
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@close:
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@FontCache@touchgfx@@QAEXXZ ENDP			; touchgfx::FontCache::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?open@FontCache@touchgfx@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?open@FontCache@touchgfx@@QAEXXZ PROC			; touchgfx::FontCache::open, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@open
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@open:
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?open@FontCache@touchgfx@@QAEXXZ ENDP			; touchgfx::FontCache::open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z
_TEXT	SEGMENT
_next$1 = -32						; size = 4
_g$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z PROC ; touchgfx::FontCache::getGlyph, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 50
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _g$[ebp], edx
$LN2@getGlyph:
; Line 51
	cmp	DWORD PTR _g$[ebp], 0
	je	SHORT $LN3@getGlyph
; Line 53
	mov	eax, DWORD PTR _g$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN4@getGlyph
; Line 55
	mov	eax, DWORD PTR _g$[ebp]
	jmp	SHORT $LN1@getGlyph
$LN4@getGlyph:
; Line 57
	mov	eax, DWORD PTR _g$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 58
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _g$[ebp], ecx
; Line 59
	jmp	SHORT $LN2@getGlyph
$LN3@getGlyph:
; Line 60
	xor	eax, eax
$LN1@getGlyph:
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z ENDP ; touchgfx::FontCache::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
_TEXT	SEGMENT
tv148 = -277						; size = 1
tv67 = -277						; size = 1
$T2 = -269						; size = 1
$T3 = -260						; size = 4
$T4 = -245						; size = 1
$T5 = -236						; size = 4
_result$ = -29						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_font$ = 8						; size = 4
_t$ = 12						; size = 8
_string$ = 20						; size = 4
?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z PROC ; touchgfx::FontCache::cacheLigatures, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 170
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 169
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 172
	push	0
	push	0
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	??0TypedText@touchgfx@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ; touchgfx::FontCache::createSortedLigatures
	add	esp, 28					; 0000001cH
	mov	BYTE PTR tv67[ebp], al
	movzx	edx, BYTE PTR tv67[ebp]
	test	edx, edx
	jne	SHORT $LN2@cacheLigat
; Line 174
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 175
	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T4[ebp]
	jmp	SHORT $LN1@cacheLigat
$LN2@cacheLigat:
; Line 177
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	??0TypedText@touchgfx@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
	mov	BYTE PTR tv148[ebp], al
	mov	cl, BYTE PTR tv148[ebp]
	mov	BYTE PTR _result$[ebp], cl
; Line 178
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 179
	mov	al, BYTE PTR _result$[ebp]
	mov	BYTE PTR $T2[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T2[ebp]
$LN1@cacheLigat:
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z ENDP ; touchgfx::FontCache::cacheLigatures
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
_TEXT	SEGMENT
tv94 = -265						; size = 1
$T2 = -257						; size = 1
$T3 = -248						; size = 4
$T4 = -233						; size = 1
_result$ = -29						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 8
_string$ = 16						; size = 4
?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z PROC ; touchgfx::FontCache::cacheString, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 157
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 156
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 158
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 159
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ; touchgfx::FontCache::createSortedString
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@cacheStrin
; Line 161
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 162
	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T4[ebp]
	jmp	SHORT $LN1@cacheStrin
$LN2@cacheStrin:
; Line 164
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	??0TypedText@touchgfx@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
	mov	BYTE PTR tv94[ebp], al
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR _result$[ebp], cl
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 166
	mov	al, BYTE PTR _result$[ebp]
	mov	BYTE PTR $T2[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T2[ebp]
$LN1@cacheStrin:
; Line 167
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z ENDP ; touchgfx::FontCache::cacheString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
_TEXT	SEGMENT
tv249 = -392						; size = 4
tv137 = -392						; size = 4
$T2 = -384						; size = 56
_base$3 = -128						; size = 4
_table$4 = -116						; size = 4
_sizeTableData$5 = -104					; size = 4
_gsubPosition$6 = -92					; size = 4
_sizeOfGSUB$7 = -80					; size = 4
_flashFont$ = -68					; size = 4
_flashFonts$ = -56					; size = 4
_binaryFontData$ = -44					; size = 4
_fontId$ = -32						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 8
_font$ = 16						; size = 4
_loadGsubOrContextTable$ = 20				; size = 1
?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z PROC ; touchgfx::FontCache::initializeCachedFont, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 80
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 79
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 82
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFontId@TypedText@touchgfx@@QBEGXZ	; touchgfx::TypedText::getFontId
	mov	WORD PTR _fontId$[ebp], ax
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 85
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 88
	push	44					; 0000002cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	mov	DWORD PTR _binaryFontData$[ebp], eax
; Line 91
	call	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ ; TypedTextDatabase::getFonts
	mov	DWORD PTR _flashFonts$[ebp], eax
; Line 92
	movzx	eax, WORD PTR _fontId$[ebp]
	mov	ecx, DWORD PTR _flashFonts$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _flashFont$[ebp], edx
; Line 93
	mov	eax, DWORD PTR _flashFont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fontId$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ; touchgfx::CachedFont::CachedFont
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	push	ecx
	mov	ecx, DWORD PTR _font$[ebp]
	call	??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1CachedFont@touchgfx@@UAE@XZ
; Line 95
	movzx	eax, BYTE PTR _loadGsubOrContextTable$[ebp]
	test	eax, eax
	je	$LN2@initialize
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	$LN2@initialize
; Line 97
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 99
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN9@initialize
	mov	ecx, DWORD PTR _binaryFontData$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN10@initialize
$LN9@initialize:
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv137[ebp], ecx
$LN10@initialize:
	mov	edx, DWORD PTR _binaryFontData$[ebp]
	mov	eax, DWORD PTR tv137[ebp]
	sub	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _sizeOfGSUB$7[ebp], eax
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, DWORD PTR _sizeOfGSUB$7[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+36]
	jae	SHORT $LN3@initialize
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _sizeOfGSUB$7[ebp]
	and	ecx, -4					; fffffffcH
	mov	DWORD PTR _gsubPosition$6[ebp], ecx
; Line 105
	mov	eax, DWORD PTR _sizeOfGSUB$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _gsubPosition$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 106
	mov	esi, esp
	mov	eax, DWORD PTR _gsubPosition$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _gsubPosition$6[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 108
	jmp	SHORT $LN2@initialize
$LN3@initialize:
; Line 111
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@initialize:
; Line 115
	movzx	eax, BYTE PTR _loadGsubOrContextTable$[ebp]
	test	eax, eax
	je	$LN5@initialize
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	$LN5@initialize
; Line 117
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 119
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR _binaryFontData$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _sizeTableData$5[ebp], edx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _sizeTableData$5[ebp]
	lea	eax, DWORD PTR [ecx+edx+32]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+36]
	jae	$LN6@initialize
; Line 124
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	and	ecx, -4					; fffffffcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _table$4[ebp], ecx
; Line 129
	mov	esi, esp
	mov	eax, DWORD PTR _table$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _sizeTableData$5[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 131
	mov	eax, DWORD PTR _sizeTableData$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _base$3[ebp], ecx
; Line 136
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _base$3[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	mov	ecx, DWORD PTR _base$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [eax], edx
; Line 137
	mov	eax, 2
	shl	eax, 0
	mov	ecx, DWORD PTR _base$3[ebp]
	movzx	edx, WORD PTR [ecx+eax]
	mov	eax, DWORD PTR _base$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 138
	mov	eax, 2
	shl	eax, 1
	mov	ecx, DWORD PTR _base$3[ebp]
	movzx	edx, WORD PTR [ecx+eax]
	mov	eax, DWORD PTR _base$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 139
	mov	eax, 2
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _base$3[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	mov	ecx, DWORD PTR _base$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 140
	mov	eax, 2
	shl	eax, 2
	mov	ecx, DWORD PTR _base$3[ebp]
	movzx	edx, WORD PTR [ecx+eax]
	mov	eax, DWORD PTR _base$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 141
	mov	eax, 2
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _base$3[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	mov	ecx, DWORD PTR _base$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [eax+20], edx
; Line 142
	mov	eax, 2
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _table$4[ebp]
	mov	eax, DWORD PTR _base$3[ebp]
	mov	cx, WORD PTR [eax+ecx]
	mov	WORD PTR [edx+24], cx
; Line 143
	mov	eax, 2
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _table$4[ebp]
	mov	eax, DWORD PTR _base$3[ebp]
	mov	cx, WORD PTR [eax+ecx]
	mov	WORD PTR [edx+26], cx
; Line 144
	mov	eax, 2
	shl	eax, 3
	mov	ecx, DWORD PTR _table$4[ebp]
	mov	edx, DWORD PTR _base$3[ebp]
	mov	ax, WORD PTR [edx+eax]
	mov	WORD PTR [ecx+28], ax
; Line 145
	mov	eax, 2
	imul	ecx, eax, 9
	mov	edx, DWORD PTR _table$4[ebp]
	mov	eax, DWORD PTR _base$3[ebp]
	mov	cx, WORD PTR [eax+ecx]
	mov	WORD PTR [edx+30], cx
; Line 146
	jmp	SHORT $LN5@initialize
$LN6@initialize:
; Line 149
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@initialize:
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 154
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-396]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z ENDP ; touchgfx::FontCache::initializeCachedFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMemory@FontCache@touchgfx@@QAEXPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__memory$ = 8						; size = 4
_size$ = 12						; size = 4
?setMemory@FontCache@touchgfx@@QAEXPAEI@Z PROC		; touchgfx::FontCache::setMemory, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __memory$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 40
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@FontCache@touchgfx@@QAEX_N@Z	; touchgfx::FontCache::clear
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setMemory@FontCache@touchgfx@@QAEXPAEI@Z ENDP		; touchgfx::FontCache::setMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@FontCache@touchgfx@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keepGsubOrContextTable$ = 8				; size = 1
?clear@FontCache@touchgfx@@QAEX_N@Z PROC		; touchgfx::FontCache::clear, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 20
	push	24					; 00000018H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?memset@touchgfx@@YAXPAXEI@Z		; touchgfx::memset
	add	esp, 12					; 0000000cH
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+32], edx
; Line 25
	movzx	eax, BYTE PTR _keepGsubOrContextTable$[ebp]
	test	eax, eax
	jne	SHORT $LN1@clear
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	and	ecx, -4					; fffffffcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
$LN1@clear:
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?clear@FontCache@touchgfx@@QAEX_N@Z ENDP		; touchgfx::FontCache::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__reader$ = 8						; size = 4
?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z PROC ; touchgfx::FontCache::setReader, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __reader$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 46
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z ENDP ; touchgfx::FontCache::setReader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FontCache@touchgfx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FontCache@touchgfx@@QAE@XZ PROC			; touchgfx::FontCache::FontCache, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7862C298_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FontCache@touchgfx@@QAE@XZ ENDP			; touchgfx::FontCache::FontCache
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTypedText@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTypedText@touchgfx@@UAEPAXI@Z PROC			; touchgfx::TypedText::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTypedText@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::TypedText::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TypedText@touchgfx@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TypedText@touchgfx@@QAE@ABV01@@Z PROC		; touchgfx::TypedText::TypedText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TypedText@touchgfx@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TypedText@touchgfx@@QAE@ABV01@@Z ENDP		; touchgfx::TypedText::TypedText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTextDirection@TypedText@touchgfx@@QBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getTextDirection@TypedText@touchgfx@@QBEEXZ PROC	; touchgfx::TypedText::getTextDirection, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F50D4E57_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 144
	cmp	DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B, 0 ; touchgfx::TypedText::typedTexts
	je	SHORT $LN3@getTextDir
	mov	eax, OFFSET ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
	test	eax, eax
	jne	SHORT $LN4@getTextDir
$LN3@getTextDir:
	mov	esi, esp
	push	144					; 00000090H
	push	OFFSET ??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@
	push	OFFSET ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@getTextDir:
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasValidId@TypedText@touchgfx@@QBE_NXZ	; touchgfx::TypedText::hasValidId
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@getTextDir
	mov	ecx, OFFSET ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
	test	ecx, ecx
	jne	SHORT $LN6@getTextDir
$LN5@getTextDir:
	mov	esi, esp
	push	145					; 00000091H
	push	OFFSET ??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@
	push	OFFSET ??_C@_1HM@LHAECKML@?$AAh?$AAa?$AAs?$AAV?$AAa?$AAl?$AAi?$AAd?$AAI?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@getTextDir:
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	movzx	eax, BYTE PTR [edx+ecx*2+1]
	shr	al, 2
	and	al, 3
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getTextDirection@TypedText@touchgfx@@QBEEXZ ENDP	; touchgfx::TypedText::getTextDirection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFontId@TypedText@touchgfx@@QBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFontId@TypedText@touchgfx@@QBEGXZ PROC		; touchgfx::TypedText::getFontId, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F50D4E57_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 120
	cmp	DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B, 0 ; touchgfx::TypedText::typedTexts
	je	SHORT $LN3@getFontId
	mov	eax, OFFSET ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
	test	eax, eax
	jne	SHORT $LN4@getFontId
$LN3@getFontId:
	mov	esi, esp
	push	120					; 00000078H
	push	OFFSET ??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@
	push	OFFSET ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@getFontId:
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasValidId@TypedText@touchgfx@@QBE_NXZ	; touchgfx::TypedText::hasValidId
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@getFontId
	mov	ecx, OFFSET ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
	test	ecx, ecx
	jne	SHORT $LN6@getFontId
$LN5@getFontId:
	mov	esi, esp
	push	121					; 00000079H
	push	OFFSET ??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@
	push	OFFSET ??_C@_1HM@LHAECKML@?$AAh?$AAa?$AAs?$AAV?$AAa?$AAl?$AAi?$AAd?$AAI?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@getFontId:
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	movzx	ax, BYTE PTR [edx+ecx*2]
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontId@TypedText@touchgfx@@QBEGXZ ENDP		; touchgfx::TypedText::getFontId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ PROC	; touchgfx::TypedText::getFont, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F50D4E57_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 108
	cmp	DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B, 0 ; touchgfx::TypedText::typedTexts
	je	SHORT $LN3@getFont
	mov	eax, OFFSET ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
	test	eax, eax
	jne	SHORT $LN4@getFont
$LN3@getFont:
	mov	esi, esp
	push	108					; 0000006cH
	push	OFFSET ??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@
	push	OFFSET ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@getFont:
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasValidId@TypedText@touchgfx@@QBE_NXZ	; touchgfx::TypedText::hasValidId
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@getFont
	mov	ecx, OFFSET ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
	test	ecx, ecx
	jne	SHORT $LN6@getFont
$LN5@getFont:
	mov	esi, esp
	push	109					; 0000006dH
	push	OFFSET ??_C@_1NI@LPKMCJAD@?$AAC?$AA?3?$AA?2?$AAS?$AAT?$AAM?$AA3?$AA2?$AAC?$AAu?$AAb?$AAe?$AAI?$AAD?$AAE@
	push	OFFSET ??_C@_1HM@LHAECKML@?$AAh?$AAa?$AAs?$AAV?$AAa?$AAl?$AAi?$AAd?$AAI?$AAd?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@getFont:
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	movzx	eax, BYTE PTR [edx+ecx*2]
	mov	ecx, DWORD PTR ?fonts@TypedText@touchgfx@@0PBQBVFont@2@B ; touchgfx::TypedText::fonts
	mov	eax, DWORD PTR [ecx+eax*4]
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ ENDP	; touchgfx::TypedText::getFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?hasValidId@TypedText@touchgfx@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?hasValidId@TypedText@touchgfx@@QBE_NXZ PROC		; touchgfx::TypedText::hasValidId, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-16]
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F50D4E57_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR ?numberOfTypedTexts@TypedText@touchgfx@@0GA ; touchgfx::TypedText::numberOfTypedTexts
	cmp	ecx, edx
	jge	SHORT $LN3@hasValidId
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@hasValidId
$LN3@hasValidId:
	mov	DWORD PTR tv68[ebp], 0
$LN4@hasValidId:
	movzx	eax, BYTE PTR tv68[ebp]
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?hasValidId@TypedText@touchgfx@@QBE_NXZ ENDP		; touchgfx::TypedText::hasValidId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1TypedText@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TypedText@touchgfx@@UAE@XZ PROC			; touchgfx::TypedText::~TypedText, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F50D4E57_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TypedText@touchgfx@@6B@
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TypedText@touchgfx@@UAE@XZ ENDP			; touchgfx::TypedText::~TypedText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::Font::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Font@touchgfx@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Font@touchgfx@@QAEAAV01@ABV01@@Z PROC		; touchgfx::Font::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+6]
	mov	WORD PTR [eax+6], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+8]
	mov	BYTE PTR [eax+8], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+9]
	mov	BYTE PTR [eax+9], dl
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+10]
	and	cl, 127					; 0000007fH
	and	cl, 127					; 0000007fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+10]
	and	al, 128					; 00000080H
	or	al, cl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+10], al
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+10]
	shr	cl, 7
	and	cl, 1
	and	cl, 1
	shl	cl, 7
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+10]
	and	al, 127					; 0000007fH
	or	al, cl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+10], al
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+11]
	mov	BYTE PTR [eax+11], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+12]
	mov	BYTE PTR [eax+12], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+14]
	mov	WORD PTR [eax+14], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+16]
	mov	WORD PTR [eax+16], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Font@touchgfx@@QAEAAV01@ABV01@@Z ENDP		; touchgfx::Font::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::Font::getContextualFormsTable, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 462
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 463
	xor	eax, eax
; Line 464
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::Font::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@Font@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@Font@touchgfx@@UBEPBGXZ PROC		; touchgfx::Font::getGSUBTable, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 452
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 453
	xor	eax, eax
; Line 454
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@Font@touchgfx@@UBEPBGXZ ENDP		; touchgfx::Font::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC	; touchgfx::Font::getKerning, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 433
	xor	al, al
; Line 434
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP	; touchgfx::Font::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByteAlignRow@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getByteAlignRow@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getByteAlignRow, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+10]
	shr	al, 7
	and	al, 1
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getByteAlignRow@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getByteAlignRow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBitsPerPixel@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBitsPerPixel@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getBitsPerPixel, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+10]
	and	al, 127					; 0000007fH
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBitsPerPixel@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getBitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getHeight@Font@touchgfx@@UBEGXZ PROC			; touchgfx::Font::getHeight, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+4]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getHeight@Font@touchgfx@@UBEGXZ ENDP			; touchgfx::Font::getHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBaseline@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBaseline@Font@touchgfx@@UBEGXZ PROC			; touchgfx::Font::getBaseline, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+6]
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBaseline@Font@touchgfx@@UBEGXZ ENDP			; touchgfx::Font::getBaseline
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEllipsisChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEllipsisChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getEllipsisChar, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+16]
; Line 235
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getEllipsisChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getEllipsisChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFallbackChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFallbackChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFallbackChar, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+14]
; Line 222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFallbackChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFallbackChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
_TEXT	SEGMENT
_glyph$ = -44						; size = 4
_bitsPerPixelDummy$ = -29				; size = 1
_dummyPixelDataPointer$ = -20				; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z PROC	; touchgfx::Font::getGlyph, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 202
	movzx	eax, WORD PTR _unicode$[ebp]
	test	eax, eax
	jne	SHORT $LN2@getGlyph
; Line 204
	xor	eax, eax
	jmp	SHORT $LN1@getGlyph
$LN2@getGlyph:
; Line 206
	mov	DWORD PTR _dummyPixelDataPointer$[ebp], 0
; Line 207
	mov	BYTE PTR _bitsPerPixelDummy$[ebp], 0
; Line 208
	mov	esi, esp
	lea	eax, DWORD PTR _bitsPerPixelDummy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dummyPixelDataPointer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _glyph$[ebp], eax
; Line 209
	mov	eax, DWORD PTR _glyph$[ebp]
$LN1@getGlyph:
; Line 210
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getGlyph
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@getGlyph:
	DD	2
	DD	$LN6@getGlyph
$LN6@getGlyph:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@getGlyph
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN5@getGlyph
$LN5@getGlyph:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN4@getGlyph:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z ENDP	; touchgfx::Font::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Font@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Font@touchgfx@@UAE@XZ PROC				; touchgfx::Font::~Font, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
; Line 171
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Font@touchgfx@@UAE@XZ ENDP				; touchgfx::Font::~Font
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?height@GlyphNode@touchgfx@@QBEFXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?height@GlyphNode@touchgfx@@QBEFXZ PROC			; touchgfx::GlyphNode::height, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+13]
	and	eax, 16					; 00000010H
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+7]
	or	eax, edx
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?height@GlyphNode@touchgfx@@QBEFXZ ENDP			; touchgfx::GlyphNode::height
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?width@GlyphNode@touchgfx@@QBEFXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?width@GlyphNode@touchgfx@@QBEFXZ PROC			; touchgfx::GlyphNode::width, COMDAT
; _this$ = ecx
; File C:\STM32CubeIDE\Electrium\vroom_motorcycle\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5B302B78_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+13]
	and	eax, 8
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	or	eax, edx
; Line 71
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?width@GlyphNode@touchgfx@@QBEFXZ ENDP			; touchgfx::GlyphNode::width
_TEXT	ENDS
END
