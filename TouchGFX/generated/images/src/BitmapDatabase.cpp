// 4.22.1 0xa6deedf4
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_backgrounds_800x480_lines[]; // BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_800X480_LINES_ID = 0, Size: 800x480 pixels
extern const unsigned char image_alternate_theme_images_widgets_swipecontainer_medium_off_normal[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID = 1, Size: 20x20 pixels
extern const unsigned char image_alternate_theme_images_widgets_swipecontainer_medium_on_active[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID = 2, Size: 20x20 pixels
extern const unsigned char image_arrow[]; // BITMAP_ARROW_ID = 3, Size: 840x420 pixels
extern const unsigned char image_enter[]; // BITMAP_ENTER_ID = 4, Size: 200x200 pixels
extern const unsigned char image_key[]; // BITMAP_KEY_ID = 5, Size: 89x89 pixels
extern const unsigned char image_key_2[]; // BITMAP_KEY_2_ID = 6, Size: 89x192 pixels
extern const unsigned char image_key_2_pressed[]; // BITMAP_KEY_2_PRESSED_ID = 7, Size: 89x192 pixels
extern const unsigned char image_key_pressed[]; // BITMAP_KEY_PRESSED_ID = 8, Size: 89x89 pixels
extern const unsigned char image_keypad[]; // BITMAP_KEYPAD_ID = 9, Size: 308x480 pixels
extern const unsigned char image_trans[]; // BITMAP_TRANS_ID = 10, Size: 1280x720 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_backgrounds_800x480_lines, 0, 800, 480, 0, 0, 800, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 480, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_alternate_theme_images_widgets_swipecontainer_medium_off_normal, 0, 20, 20, 17, 6, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_swipecontainer_medium_on_active, 0, 20, 20, 8, 7, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_arrow, 0, 840, 420, 0, 0, 840, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 420, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_enter, 0, 200, 200, 55, 106, 78, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 15, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_key, 0, 89, 89, 3, 2, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_key_2, 0, 89, 192, 4, 6, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 179, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_key_2_pressed, 0, 89, 192, 4, 6, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 179, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_key_pressed, 0, 89, 89, 3, 2, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_keypad, 0, 308, 480, 112, 82, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_trans, 0, 1280, 720, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
