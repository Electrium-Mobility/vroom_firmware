#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_verdana_60_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0046, -9 },  // (First char = [0x0046, F], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0050, -9 },  // (First char = [0x0050, P], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x002E, .], Kerning dist = -8)
    { 0x0056, -8 },  // (First char = [0x0056, V], Second char = [0x002E, .], Kerning dist = -8)
    { 0x0057, -6 },  // (First char = [0x0057, W], Second char = [0x002E, .], Kerning dist = -6)
    { 0x0066, -4 },  // (First char = [0x0066, f], Second char = [0x002E, .], Kerning dist = -4)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0072, -8 },  // (First char = [0x0072, r], Second char = [0x002E, .], Kerning dist = -8)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0046,  2 },  // (First char = [0x0046, F], Second char = [0x003F, ?], Kerning dist = 2)
    { 0x0054,  2 },  // (First char = [0x0054, T], Second char = [0x003F, ?], Kerning dist = 2)
    { 0x0066,  3 },  // (First char = [0x0066, f], Second char = [0x003F, ?], Kerning dist = 3)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0041, -4 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0054, T], Kerning dist = 1)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -5)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0065, -4 },  // (First char = [0x0065, e], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -2)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -7)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -6)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -6)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -6)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -6)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -6)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -2)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -5)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -6)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -6)
};
