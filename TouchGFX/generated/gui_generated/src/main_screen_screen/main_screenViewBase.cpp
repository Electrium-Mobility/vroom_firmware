/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen_screen/main_screenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

main_screenViewBase::main_screenViewBase() :
    flexButtonCallback(this, &main_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &main_screenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_800X480_LINES_ID));
    add(image1);

    swipe_container.setXY(0, 0);
    swipe_container.setSwipeCutoff(50);
    swipe_container.setEndSwipeElasticWidth(50);

    motor_page.setWidth(800);
    motor_page.setHeight(480);
    button1.setXY(280, 215);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    motor_page.add(button1);

    swipe_container.add(motor_page);

    command_page.setWidth(800);
    command_page.setHeight(480);
    command_box.setPosition(54, 183, 200, 114);
    command_box.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    command_box.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    command_box.setBorderSize(5);
    command_page.add(command_box);

    command.setPosition(61, 205, 186, 70);
    command.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    command.setLinespacing(0);
    Unicode::snprintf(commandBuffer, COMMAND_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WQGM).getText());
    command.setWildcard(commandBuffer);
    command.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1J));
    command_page.add(command);

    flexButton1.setBoxWithBorderPosition(0, 0, 199, 114);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setAlpha(118);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(55, 183, 199, 114);
    command_page.add(flexButton1);

    swipe_container.add(command_page);

    main_page_1.setWidth(800);
    main_page_1.setHeight(480);
    battery_circle_1.setXY(305, 145);
    battery_circle_1.setProgressIndicatorPosition(0, 0, 190, 190);
    battery_circle_1.setRange(0, 100);
    battery_circle_1.setCenter(95, 95);
    battery_circle_1.setRadius(85);
    battery_circle_1.setLineWidth(20);
    battery_circle_1.setStartEndAngle(0, 360);
    battery_circle_1.setCapPrecision(90);
    battery_circle_1.setBackground(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_LARGE_ID));
    battery_circle_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    battery_circle_1.setPainter(battery_circle_1Painter);
    battery_circle_1.setValue(60);
    main_page_1.add(battery_circle_1);

    battery_text_1.setXY(325, 165);
    battery_text_1.setProgressIndicatorPosition(12, 50, 130, 60);
    battery_text_1.setRange(0, 100);
    battery_text_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    battery_text_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C37D));
    battery_text_1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TEXTPROGRESS_BACKGROUNDS_ROUND_NEUTRAL_ID));
    battery_text_1.setValue(60);
    main_page_1.add(battery_text_1);

    swipe_container.add(main_page_1);

    bms_page.setWidth(800);
    bms_page.setHeight(480);
    button2.setXY(280, 215);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    bms_page.add(button2);

    swipe_container.add(bms_page);

    swipe_container.setSelectedPage(1);
    add(swipe_container);

    button3.setXY(560, 0);
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    button3.setAction(buttonCallback);
    add(button3);
}

main_screenViewBase::~main_screenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void main_screenViewBase::setupScreen()
{

}

void main_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //send_command
        //When flexButton1 clicked call virtual function
        //Call command_button_clicked
        command_button_clicked();
    }
}

void main_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button3)
    {
        //Screenchange
        //When button3 clicked change screen to Motor
        //Go to Motor with screen transition towards East
        application().gotoMotorScreenSlideTransitionEast();
    }
}
