/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/user_screen_screen/user_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

user_screenViewBase::user_screenViewBase() :
    flexButtonCallback(this, &user_screenViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 800, 480);
    background.setColor(touchgfx::Color::getColorFromRGB(73, 184, 72));
    add(background);

    user_button.setBoxWithBorderPosition(0, 0, 720, 80);
    user_button.setBorderSize(5);
    user_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(73, 184, 72), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    user_button.setAction(flexButtonCallback);
    user_button.setPosition(80, 188, 720, 80);
    add(user_button);

    view_password_button.setBoxWithBorderPosition(0, 0, 330, 80);
    view_password_button.setBorderSize(5);
    view_password_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(73, 184, 72), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    view_password_button.setAction(flexButtonCallback);
    view_password_button.setPosition(61, 383, 330, 80);
    add(view_password_button);

    password_button.setBoxWithBorderPosition(0, 0, 720, 80);
    password_button.setBorderSize(5);
    password_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(73, 184, 72), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    password_button.setAction(flexButtonCallback);
    password_button.setPosition(80, 285, 720, 80);
    add(password_button);

    enter_button.setBoxWithBorderPosition(0, 0, 330, 80);
    enter_button.setBorderSize(5);
    enter_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(73, 184, 72), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    enter_button.setAction(flexButtonCallback);
    enter_button.setPosition(409, 383, 330, 80);
    add(enter_button);

    username.setPosition(86, 204, 715, 48);
    username.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    username.setLinespacing(0);
    usernameBuffer[0] = 0;
    username.setWildcard(usernameBuffer);
    username.setTypedText(touchgfx::TypedText(T_USERNAME_TITLE));
    add(username);

    password.setPosition(86, 301, 715, 48);
    password.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    password.setLinespacing(0);
    passwordBuffer[0] = 0;
    password.setWildcard(passwordBuffer);
    password.setTypedText(touchgfx::TypedText(T_PASSWORD_TITLE));
    add(password);

    logo_background.setPosition(290, 20, 220, 150);
    logo_background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    logo_background.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    logo_background.setBorderSize(5);
    add(logo_background);

    bike_logo.setXY(332, 48);
    bike_logo.setBitmap(touchgfx::Bitmap(BITMAP_ELECTRIUM_BIKE_ID));
    add(bike_logo);

    password_icon.setXY(0, 285);
    password_icon.setBitmap(touchgfx::Bitmap(BITMAP_PASSWORD_ICON_ID));
    add(password_icon);

    user_icon.setXY(0, 188);
    user_icon.setBitmap(touchgfx::Bitmap(BITMAP_USERNAME_ICON_ID));
    add(user_icon);

    enter_icon.setXY(544, 400);
    enter_icon.setBitmap(touchgfx::Bitmap(BITMAP_ENTER_ICON_ID));
    add(enter_icon);

    view_password_title.setXY(78, 399);
    view_password_title.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    view_password_title.setLinespacing(0);
    view_password_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BCKB));
    add(view_password_title);
}

user_screenViewBase::~user_screenViewBase()
{

}

void user_screenViewBase::setupScreen()
{

}

void user_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &user_button)
    {
        //user_button_interaction
        //When user_button clicked call virtual function
        //Call user_pressed
        user_pressed();
    }
    if (&src == &password_button)
    {
        //password_button_interraction
        //When password_button clicked call virtual function
        //Call password_pressed
        password_pressed();
    }
    if (&src == &enter_button)
    {
        //enter_button_interaction
        //When enter_button clicked call virtual function
        //Call enter_pressed
        enter_pressed();
    }
    if (&src == &view_password_button)
    {
        //password_visibility_interaction
        //When view_password_button clicked call virtual function
        //Call toggle_password_visibility
        toggle_password_visibility();
    }
}
