/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef USER_SCREENVIEWBASE_HPP
#define USER_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/user_screen_screen/user_screenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class user_screenViewBase : public touchgfx::View<user_screenPresenter>
{
public:
    user_screenViewBase();
    virtual ~user_screenViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void to_main_screen();

    /*
     * Virtual Action Handlers
     */
    virtual void user_pressed()
    {
        // Override and implement this function in user_screen
    }
    virtual void password_pressed()
    {
        // Override and implement this function in user_screen
    }
    virtual void enter_pressed()
    {
        // Override and implement this function in user_screen
    }
    virtual void toggle_password_visibility()
    {
        // Override and implement this function in user_screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  user_button;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  view_password_button;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  password_button;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  enter_button;
    touchgfx::TextAreaWithOneWildcard username_text;
    touchgfx::TextAreaWithOneWildcard password_text;
    touchgfx::BoxWithBorder logo_background;
    touchgfx::Image bike_logo;
    touchgfx::Image password_icon;
    touchgfx::Image user_icon;
    touchgfx::Image enter_icon;
    touchgfx::TextArea view_password_title;
    touchgfx::ModalWindow login_error_window;
    touchgfx::ButtonWithLabel close_popup;
    touchgfx::TextArea error_text;

    /*
     * Wildcard Buffers
     */
    static const uint16_t USERNAME_TEXT_SIZE = 16;
    touchgfx::Unicode::UnicodeChar username_textBuffer[USERNAME_TEXT_SIZE];
    static const uint16_t PASSWORD_TEXT_SIZE = 16;
    touchgfx::Unicode::UnicodeChar password_textBuffer[PASSWORD_TEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<user_screenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<user_screenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // USER_SCREENVIEWBASE_HPP
